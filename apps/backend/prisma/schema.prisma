generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Category {
  id       Int       @id @default(autoincrement())
  slug     String    @unique
  name     String    @unique
  products Product[]
}

enum UserRole {
  admin
  user
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  firstName  String
  lastName   String
  phone      String?
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  role UserRole @default(user)

  addresses         Address[]
  primaryAddressId  Int?
  primaryAddress    Address? @relation("UserPrimaryAddress", fields: [primaryAddressId], references: [id], onDelete: SetNull, onUpdate: Cascade)
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int
  label     String
  street    String
  zip       String
  city      String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  usersAsPrimary User[] @relation("UserPrimaryAddress")
}

model Product {
  id            Int       @id @default(autoincrement())
  slug          String?   @unique
  sku           String?   @unique
  name          String
  description   String?   @db.Text
  priceCents    Int       @default(0)
  stock         Int       @default(0)
  active        Boolean   @default(true)
  imageFilename String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  bundleItems BundleItem[]

  @@index([active, createdAt])
  @@index([categoryId])
  @@index([slug])
  @@index([sku])
}

model Bundle {
  id          Int          @id @default(autoincrement())
  slug        String?      @unique
  name        String
  description String?
  active      Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  items  BundleItem[]
  images BundleImage[]
}

model BundleItem {
  id        Int     @id @default(autoincrement())
  bundleId  Int
  productId Int
  quantity  Int     @default(1)

  bundle  Bundle  @relation(fields: [bundleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@unique([bundleId, productId])
  @@index([productId])
}

model BundleImage {
  id        Int     @id @default(autoincrement())
  bundleId  Int
  filename  String
  alt       String?
  sort      Int     @default(0)

  bundle Bundle @relation(fields: [bundleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([bundleId, sort])
}
